name: 'Deploy to ECS'
description: 'Update ECS service to use new Docker image'

inputs:
  aws_account_id:
    description: 'AWS Account ID'
    required: true
  aws_region:
    description: 'AWS Region'
    required: true
    default: 'us-east-1'
  iam_deployer_role_name:
    description: 'IAM role name for deployment'
    required: true
  ecs_cluster_name:
    description: 'ECS cluster name'
    required: true
  ecs_service_name:
    description: 'ECS service name'
    required: true
  ecs_task_definition_family:
    description: 'ECS task definition family'
    required: true
  image_uri:
    description: 'New Docker image URI'
    required: true
  container_name:
    description: 'Container name in task definition'
    required: true
    default: 'app'

runs:
  using: 'composite'
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ inputs.aws_account_id }}:role/Enterprise/${{ inputs.iam_deployer_role_name }}
        aws-region: ${{ inputs.aws_region }}

    - name: Download current task definition
      shell: bash
      run: |
        aws ecs describe-task-definition \
          --task-definition ${{ inputs.ecs_task_definition_family }} \
          --query taskDefinition \
          --output json > task-definition.json

    - name: Update task definition with new image
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ inputs.container_name }}
        image: ${{ inputs.image_uri }}

    - name: Deploy to ECS service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ inputs.ecs_service_name }}
        cluster: ${{ inputs.ecs_cluster_name }}
        wait-for-service-stability: true 